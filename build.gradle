buildscript {
     repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        maven {
            
            name = "Progwml6 maven"
            url = "https://dvs1.progwml6.com/files/maven/"
        }
        maven {
          
            name = "ModMaven"
            url = "https://modmaven.k-4u.nl"
        }
        mavenCentral()
    } 
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

repositories {
    maven { url = 'https://maven.minecraftforge.net/' }
    maven {
     
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
    
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
    mavenCentral()
}
apply plugin: 'net.minecraftforge.gradle'

apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '1.0'
group = 'com.yourname.modid'
archivesBaseName = 'modid'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {

    mappings channel: 'snapshot', version: '20201028-1.16.3'
 
 	accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
 	
 
    runs {
        client {
            workingDirectory project.file('run')

           
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

         
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

           
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

         
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

          
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

          
            property 'forge.logging.console.level', 'debug'

           
            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}


sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
  
    minecraft 'net.minecraftforge:forge:1.16.5-36.1.32'

    compileOnly fg.deobf("mezz.jei:jei-1.16.5:7.7.0.106:api")
    runtimeOnly fg.deobf("mezz.jei:jei-1.16.5:7.7.0.106")
    implementation fg.deobf('software.bernie.geckolib:geckolib-forge-1.16.5:3.0.43')

}


repositories {
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
}

jar {
    manifest {
        attributes([
            "Specification-Title": "examplemod",
            "Specification-Vendor": "examplemodsareus",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"examplemodsareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}


jar.finalizedBy('reobfJar') 


publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}